#include <EEPROM.h>
#include <SPI.h>
#include <Ethernet.h>

byte mac[] = { 0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED };
IPAddress ip(192, 168, 18, 110);
IPAddress defaultIp(192, 168, 1, 10);

EthernetServer server(6000);
EthernetClient client;

bool clientConnected = false; // Track client connection status

void writeIPAddressToEEPROM(int startAddress, IPAddress ipAddr) {
  for (int i = 0; i < 4; ++i) {
    EEPROM.write(startAddress + i, ipAddr[i]);
  }
}

IPAddress readIPAddressFromEEPROM(int startAddress) {
  byte octets[4];
  for (int i = 0; i < 4; ++i) {
    octets[i] = EEPROM.read(startAddress + i);
  }
  return IPAddress(octets);
}

void clearStoredIPFromEEPROM() {
  for (int i = 0; i < 4; ++i) {
    EEPROM.write(i, 0); // Writing 0 to the first 4 bytes where IP is stored
  }
}

void setup() {
  Serial.begin(9600);
  Ethernet.begin(mac, ip);
  server.begin();

  IPAddress storedIP = readIPAddressFromEEPROM(0);

  if (storedIP == IPAddress(0, 0, 0, 0)) {
    Ethernet.begin(mac, ip);
    writeIPAddressToEEPROM(0, ip); // Store the default IP
  } else {
    Ethernet.begin(mac, storedIP);
  }

  Serial.print("Current IP address: ");
  Serial.println(Ethernet.localIP());

  pinMode(9, OUTPUT);
  digitalWrite(9, HIGH);
}

bool establishConnection() {
  if (!clientConnected) {
    client = server.available();
    if (client) {
      while (!clientConnected && client.connected()) {
        if (client.available()) {
          clientConnected = true;
          return true;
        }
        delay(1000);
      }
    }
    return false;
  }
  return true;
}

void loop() {
  if (!establishConnection()) {
    Serial.println("Connection lost. Attempting to reconnect...");
    clientConnected = false; // Reset connection flag
    delay(1000);
    return;
  }

  if (clientConnected && client.connected()) {
    while (client.available()) {
      String command = client.readStringUntil('%');
      command.trim();

      if (command == "HI") {
        client.println("Connected");
      } else if (command == "ENTRY") {
        client.println("Entry Gate is opened");
        digitalWrite(9, LOW);
        delay(500);
        digitalWrite(9, HIGH);
        delay(500);
      } else if (command == "READIP") {
        Serial.print("IP Address Requested: ");
        Serial.println(Ethernet.localIP());
        client.println(Ethernet.localIP());
      } else if (command.startsWith("WRITEIP:")) {
        String newIPString = command.substring(8);
        IPAddress newIP;
        client.println("New IP address set: " + newIPString);
        client.println("PLEASE DISCONNECT AND CONNECT WITH NEW IP");
        client.println("PLEASE RESTART THE POWER");
        if (newIP.fromString(newIPString)) {
          Ethernet.begin(mac, newIP);
          clearStoredIPFromEEPROM(); // Clear previous stored IP
          writeIPAddressToEEPROM(0, newIP); // Store the changed IP
          delay(1000);
        } else {
          client.println("Invalid IP address format.");
        }
      } else if (command == "RESET") {
        Ethernet.begin(mac, defaultIp);
        clearStoredIPFromEEPROM(); // Clear stored IP
        writeIPAddressToEEPROM(0, defaultIp); // Store the default IP
        client.println("Default address set: " + defaultIp);
        delay(1000);
      } else {
        client.println("Unknown command");
      }
    }
  } else {
    clientConnected = false; // Reset connection flag
  }
}
